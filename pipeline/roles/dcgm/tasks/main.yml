---
- name: Install dependencies
  apt:
    name:
      - wget
      - apt-transport-https
      - ca-certificates
      - gnupg
      - curl
    state: present

- name: Create keyrings directory
  file:
    path: /etc/apt/keyrings
    state: directory
    mode: '0755'

- name: Check if NVIDIA CUDA keyring is already installed
  shell: dpkg-query -W -f='${Status}' cuda-keyring 2>/dev/null || echo "not-installed"
  register: keyring_check
  changed_when: false

- name: Download NVIDIA CUDA keyring
  get_url:
    url: https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/x86_64/cuda-keyring_1.0-1_all.deb
    dest: /tmp/cuda-keyring.deb
    mode: '0644'
  when: keyring_check.stdout != "install ok installed"

- name: Install NVIDIA CUDA keyring
  apt:
    deb: /tmp/cuda-keyring.deb
    state: present
  when: keyring_check.stdout != "install ok installed"

- name: Remove hellorepo source list if it exists
  file:
    path: /etc/apt/sources.list.d/hellorepo.list
    state: absent

- name: Add NVIDIA CUDA repository (only if keyring was manually installed)
  apt_repository:
    repo: "deb [signed-by=/usr/share/keyrings/cuda-archive-keyring.gpg] https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/x86_64/ /"
    state: present
    update_cache: yes
  when: keyring_check.stdout != "install ok installed"

- name: Update apt cache
  apt:
    update_cache: yes
  
- name: Install DCGM from official repository
  apt:
    name: datacenter-gpu-manager
    state: present
    update_cache: yes
  register: dcgm_install

- name: Create staging directory
  file:
    path: "{{ staging_dir }}"
    state: directory
    mode: '0755'

- name: Find installed DCGM package information
  shell: dpkg-query -W -f='${Version}' datacenter-gpu-manager
  register: dcgm_version
  changed_when: false
  when: dcgm_install is success or dcgm_install is succeeded

- name: Create a local copy of DCGM package
  shell: |
    cd {{ staging_dir }}
    apt-get download datacenter-gpu-manager
    # Rename to match our expected convention
    mv datacenter-gpu-manager_*.deb {{ exporter }}_{{ version }}.deb || echo "Failed to rename file"
    ls -la {{ staging_dir }}
  args:
    executable: /bin/bash
  register: download_result
  when: dcgm_install is success or dcgm_install is succeeded

- name: Create systemd service file from template
  template:
    src: dcgm.service.j2
    dest: "{{ build_root }}/{{ exporter }}/dcgm.service"
    mode: "0644"

- name: Create a placeholder file when installation fails
  copy:
    content: "Failed to download DCGM package on {{ ansible_date_time.iso8601 }}"
    dest: "{{ staging_dir }}/{{ exporter }}_{{ version }}_download_failed.txt"
  when: dcgm_install is failed